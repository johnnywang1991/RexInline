.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Rex::Inline::Base 3"
.TH Rex::Inline::Base 3 "2015-04-02" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Rex::Inline::Base \- write Rex in perl, Base module
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Rex::Inline::Base is an superclass of Rex::Inline task object
.SH "GETTING HELP"
.IX Header "GETTING HELP"
.IP "\(bu" 3
Web Site: <http://rexify.org/>
.IP "\(bu" 3
\&\s-1IRC:\s0 irc.freenode.net #rex
.IP "\(bu" 3
Bug Tracker: <https://github.com/RexOps/Rex/issues>
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  package Test;
\&  use Moose;
\&  use Rex \-feature => [\*(Aq1.0\*(Aq];
\&  extends \*(AqRex::Inline::Base\*(Aq;
\&
\&  sub func {
\&    my $self = shift;
\&
\&    return sub {
\&      my $output = run "uptime";
\&      say $output;
\&      say $self\->input;
\&    }
\&  }
\&
\&  _\|_PACKAGE_\|_\->meta\->make_immutable;
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.IP "id" 7
.IX Item "id"
set/get task id (String)
.Sp
default is random number
.IP "server" 7
.IX Item "server"
server address used when ssh connection
.Sp
This param is required.
.IP "user" 7
.IX Item "user"
username used when ssh connection
.IP "password" 7
.IX Item "password"
password used when ssh connection
.IP "private_key" 7
.IX Item "private_key"
private_key filename used when ssh connection
.IP "public_key" 7
.IX Item "public_key"
public_key filename used when ssh connection
.IP "sudo [TRUE|FALSE]" 7
.IX Item "sudo [TRUE|FALSE]"
use sudo when execute commands
.Sp
default is \f(CW\*(C`undef\*(C'\fR
.IP "input" 7
.IX Item "input"
input param for tasklist module in any format you need
